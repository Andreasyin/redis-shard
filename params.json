{"name":"Redis-shard","body":"Redis Shard \r\n==============\r\nA redis sharding api. Sharding is done based on the CRC32 checksum of a key or key tag (\"key{key_tag}\"),\r\naccording to this article http://antirez.com/post/redis-presharding.html .\r\n\r\nThe source code is locate at `github <https://github.com/youngking/redis-shard>`_ .\r\n\r\nUseage\r\n==============\r\nCreating a hash ring with multiple servers,By default the hash ring uses a crc32\r\nhashing algorithm on the server's ``name`` config.You can define the name anything\r\nas you like,but it must be unique.\r\n\r\nI don't want to bind the hashring with ipaddress,because if I do some master/slave switches,\r\nI can only change the ipaddress related config. The ``name`` is kept,so the hashring's order\r\nis kept.\r\n\r\n>>> from redis_shard.shard import RedisShardAPI\r\n>>> servers = [\r\n    ...    {'name':'server1','host':'127.0.0.1','port':10000,'db':0},\r\n    ...    {'name':'server2','host':'127.0.0.1','port':11000,'db':0},\r\n    ...    {'name':'server3','host':'127.0.0.1','port':12000,'db':0},\r\n    ...    {'name':'127.0.0.1:13000','host':'127.0.0.1','port':13000,'db':0},\r\n    ...    ]\r\n>>> \r\n>>> client = RedisShardAPI(servers)\r\n>>> client.set('test',1)\r\n>>> print client.get('test')\r\n>>> client.zadd('testset','first',1)\r\n>>> client.zadd('testset','second',2)\r\n>>> print client.zrange('testset',0,-1)\r\n\r\nHash tags\r\n----------------\r\nsee article `http://antirez.com/post/redis-presharding.html` for detail.\r\n\r\n>>> client.set('foo',2)\r\n>>> client.set('a{foo}',5)\r\n>>> client.set('b{foo}',5)\r\n>>> client.set('{foo}d',5)\r\n>>> client.set('d{foo}e',5)\r\n>>> print client.get_server_name('foo') == client.get_server_name('a{foo}') == client.get_server_name('{foo}d') \\\r\n... == client.get_server_name('d{foo}e')\r\n\r\nI also added an `tag_keys` method,which is more quickly than default `keys` method,because it only look \r\none machine.\r\n\r\n>>> client.tag_keys('*{foo}*') == client.keys('*{foo}*')\r\n\r\n","tagline":"Redis sharding api","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}